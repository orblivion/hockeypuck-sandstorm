worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
        use epoll;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_names_hash_bucket_size 64;
	server_tokens off;
	server_name_in_redirect off;

	include mime.types;
	default_type application/octet-stream;

	# Logging
	access_log off;
	error_log stderr;

	# Prevent nginx from adding compression; this interacts badly with Sandstorm
	# WebSession due to https://github.com/sandstorm-io/sandstorm/issues/289
	gzip off;

	# Trust the sandstorm-http-bridge's X-Forwarded-Proto.
	map $http_x_forwarded_proto $fe_https {
		default "";
		https on;
	}

	# For websockets, forward the Connection header.
	map $http_upgrade $connection_upgrade {
		default	upgrade;
		''	close;
	}

	upstream uvicorn_server {
		server unix:/var/run/uvicorn.sock fail_timeout=0;
	}

	server {
		listen 8000 default_server;
		listen [::]:8000 default_server ipv6only=on;

		# Allow arbitrarily large bodies - Sandstorm can handle them, and requests
		# are authenticated already, so there's no reason for apps to add additional
		# limits by default.
		client_max_body_size 0;

		server_name localhost;
		root /opt/app;
		location /static/ {
			alias /opt/app/static/;
		}
		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			# Used for Sandstorm's static hosting
			proxy_set_header Host $http_host;
			# Used for websockets
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_redirect off;
			proxy_pass http://uvicorn_server;
		}
	}
}
